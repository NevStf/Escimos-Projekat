Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _FUN _TYPE _ID $@1 _LPAREN parameters _RPAREN body

    6 parameters: %empty
    7           | _TYPE _ID
    8           | _TYPE _ID _COMMA _TYPE _ID

    9 body: _LBRACKET variable_list statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: vars _SEMICOLON

   13 vars: _TYPE _ID
   14     | vars _COMMA _ID

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement
   21          | increment

   22 compound_statement: _LBRACKET statement_list _RBRACKET

   23 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   24 num_exp: exp
   25        | num_exp _AROP exp

   26 exp: literal
   27    | _ID
   28    | function_call
   29    | _LPAREN num_exp _RPAREN
   30    | _ID _INC

   31 increment: _ID _INC _SEMICOLON

   32 literal: _INT_NUMBER
   33        | _UINT_NUMBER

   34 $@2: %empty

   35 function_call: _ID $@2 _LPAREN argument _RPAREN

   36 argument: %empty
   37         | num_exp
   38         | num_exp _COMMA num_exp

   39 if_statement: if_part
   40             | if_part _ELSE statement

   41 if_part: _IF _LPAREN rel_exp _RPAREN statement

   42 rel_exp: num_exp _RELOP num_exp

   43 return_statement: _RETURN num_exp _SEMICOLON
   44                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 8 13
_IF (259) 41
_ELSE (260) 40
_RETURN (261) 43 44
_ID (262) 5 7 8 13 14 23 27 30 31 35
_INT_NUMBER (263) 32
_UINT_NUMBER (264) 33
_LPAREN (265) 5 29 35 41
_RPAREN (266) 5 29 35 41
_LBRACKET (267) 9 22
_RBRACKET (268) 9 22
_ASSIGN (269) 23
_SEMICOLON (270) 12 23 31 43 44
_COMMA (271) 8 14 38
_AROP (272) 25
_RELOP (273) 42
_INC (274) 30 31
_FUN (275) 5
ONLY_IF (276)


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
program (23)
    on left: 1, on right: 0
function_list (24)
    on left: 2 3, on right: 1 3
function (25)
    on left: 5, on right: 2 3
$@1 (26)
    on left: 4, on right: 5
parameters (27)
    on left: 6 7 8, on right: 5
body (28)
    on left: 9, on right: 5
variable_list (29)
    on left: 10 11, on right: 9 11
variable (30)
    on left: 12, on right: 11
vars (31)
    on left: 13 14, on right: 12 14
statement_list (32)
    on left: 15 16, on right: 9 16 22
statement (33)
    on left: 17 18 19 20 21, on right: 16 40 41
compound_statement (34)
    on left: 22, on right: 17
assignment_statement (35)
    on left: 23, on right: 18
num_exp (36)
    on left: 24 25, on right: 23 25 29 37 38 42 43
exp (37)
    on left: 26 27 28 29 30, on right: 24 25
increment (38)
    on left: 31, on right: 21
literal (39)
    on left: 32 33, on right: 26
function_call (40)
    on left: 35, on right: 28
$@2 (41)
    on left: 34, on right: 35
argument (42)
    on left: 36 37 38, on right: 35
if_statement (43)
    on left: 39 40, on right: 19
if_part (44)
    on left: 41, on right: 39 40
rel_exp (45)
    on left: 42, on right: 41
return_statement (46)
    on left: 43 44, on right: 20


State 0

    0 $accept: . program $end

    _FUN  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _FUN . _TYPE _ID $@1 _LPAREN parameters _RPAREN body

    _TYPE  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _FUN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _FUN _TYPE . _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _FUN _TYPE _ID . $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    5 function: _FUN _TYPE _ID $@1 . _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 10


State 10

    5 function: _FUN _TYPE _ID $@1 _LPAREN . parameters _RPAREN body

    _TYPE  shift, and go to state 11

    $default  reduce using rule 6 (parameters)

    parameters  go to state 12


State 11

    7 parameters: _TYPE . _ID
    8           | _TYPE . _ID _COMMA _TYPE _ID

    _ID  shift, and go to state 13


State 12

    5 function: _FUN _TYPE _ID $@1 _LPAREN parameters . _RPAREN body

    _RPAREN  shift, and go to state 14


State 13

    7 parameters: _TYPE _ID .
    8           | _TYPE _ID . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 15

    $default  reduce using rule 7 (parameters)


State 14

    5 function: _FUN _TYPE _ID $@1 _LPAREN parameters _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    8 parameters: _TYPE _ID _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 18


State 16

    9 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 19


State 17

    5 function: _FUN _TYPE _ID $@1 _LPAREN parameters _RPAREN body .

    $default  reduce using rule 5 (function)


State 18

    8 parameters: _TYPE _ID _COMMA _TYPE . _ID

    _ID  shift, and go to state 20


State 19

    9 body: _LBRACKET variable_list . statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 21

    $default  reduce using rule 15 (statement_list)

    variable        go to state 22
    vars            go to state 23
    statement_list  go to state 24


State 20

    8 parameters: _TYPE _ID _COMMA _TYPE _ID .

    $default  reduce using rule 8 (parameters)


State 21

   13 vars: _TYPE . _ID

    _ID  shift, and go to state 25


State 22

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 23

   12 variable: vars . _SEMICOLON
   14 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 26
    _COMMA      shift, and go to state 27


State 24

    9 body: _LBRACKET variable_list statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32

    statement             go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    increment             go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 25

   13 vars: _TYPE _ID .

    $default  reduce using rule 13 (vars)


State 26

   12 variable: vars _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 27

   14 vars: vars _COMMA . _ID

    _ID  shift, and go to state 40


State 28

   41 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 41


State 29

   43 return_statement: _RETURN . num_exp _SEMICOLON
   44                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45
    _SEMICOLON    shift, and go to state 46

    num_exp        go to state 47
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 30

   23 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   31 increment: _ID . _INC _SEMICOLON

    _ASSIGN  shift, and go to state 51
    _INC     shift, and go to state 52


State 31

   22 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 53


State 32

    9 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 33

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 34

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 35

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 36

   21 statement: increment .

    $default  reduce using rule 21 (statement)


State 37

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 38

   39 if_statement: if_part .
   40             | if_part . _ELSE statement

    _ELSE  shift, and go to state 54

    $default  reduce using rule 39 (if_statement)


State 39

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 40

   14 vars: vars _COMMA _ID .

    $default  reduce using rule 14 (vars)


State 41

   41 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 55
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    rel_exp        go to state 56


State 42

   27 exp: _ID .
   30    | _ID . _INC
   35 function_call: _ID . $@2 _LPAREN argument _RPAREN

    _INC  shift, and go to state 57

    _LPAREN   reduce using rule 34 ($@2)
    $default  reduce using rule 27 (exp)

    $@2  go to state 58


State 43

   32 literal: _INT_NUMBER .

    $default  reduce using rule 32 (literal)


State 44

   33 literal: _UINT_NUMBER .

    $default  reduce using rule 33 (literal)


State 45

   29 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 59
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 46

   44 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 44 (return_statement)


State 47

   25 num_exp: num_exp . _AROP exp
   43 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 60
    _AROP       shift, and go to state 61


State 48

   24 num_exp: exp .

    $default  reduce using rule 24 (num_exp)


State 49

   26 exp: literal .

    $default  reduce using rule 26 (exp)


State 50

   28 exp: function_call .

    $default  reduce using rule 28 (exp)


State 51

   23 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 62
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 52

   31 increment: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 63


State 53

   16 statement_list: statement_list . statement
   22 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 64

    statement             go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    increment             go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 54

   40 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31

    statement             go to state 65
    compound_statement    go to state 34
    assignment_statement  go to state 35
    increment             go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 55

   25 num_exp: num_exp . _AROP exp
   42 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 61
    _RELOP  shift, and go to state 66


State 56

   41 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 67


State 57

   30 exp: _ID _INC .

    $default  reduce using rule 30 (exp)


State 58

   35 function_call: _ID $@2 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 68


State 59

   25 num_exp: num_exp . _AROP exp
   29 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 69
    _AROP    shift, and go to state 61


State 60

   43 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 43 (return_statement)


State 61

   25 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    exp            go to state 70
    literal        go to state 49
    function_call  go to state 50


State 62

   23 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   25 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 71
    _AROP       shift, and go to state 61


State 63

   31 increment: _ID _INC _SEMICOLON .

    $default  reduce using rule 31 (increment)


State 64

   22 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 22 (compound_statement)


State 65

   40 if_statement: if_part _ELSE statement .

    $default  reduce using rule 40 (if_statement)


State 66

   42 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 72
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 67

   41 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31

    statement             go to state 73
    compound_statement    go to state 34
    assignment_statement  go to state 35
    increment             go to state 36
    if_statement          go to state 37
    if_part               go to state 38
    return_statement      go to state 39


State 68

   35 function_call: _ID $@2 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    $default  reduce using rule 36 (argument)

    num_exp        go to state 74
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50
    argument       go to state 75


State 69

   29 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 29 (exp)


State 70

   25 num_exp: num_exp _AROP exp .

    $default  reduce using rule 25 (num_exp)


State 71

   23 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 23 (assignment_statement)


State 72

   25 num_exp: num_exp . _AROP exp
   42 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 61

    $default  reduce using rule 42 (rel_exp)


State 73

   41 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 41 (if_part)


State 74

   25 num_exp: num_exp . _AROP exp
   37 argument: num_exp .
   38         | num_exp . _COMMA num_exp

    _COMMA  shift, and go to state 76
    _AROP   shift, and go to state 61

    $default  reduce using rule 37 (argument)


State 75

   35 function_call: _ID $@2 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 77


State 76

   38 argument: num_exp _COMMA . num_exp

    _ID           shift, and go to state 42
    _INT_NUMBER   shift, and go to state 43
    _UINT_NUMBER  shift, and go to state 44
    _LPAREN       shift, and go to state 45

    num_exp        go to state 78
    exp            go to state 48
    literal        go to state 49
    function_call  go to state 50


State 77

   35 function_call: _ID $@2 _LPAREN argument _RPAREN .

    $default  reduce using rule 35 (function_call)


State 78

   25 num_exp: num_exp . _AROP exp
   38 argument: num_exp _COMMA num_exp .

    _AROP  shift, and go to state 61

    $default  reduce using rule 38 (argument)
