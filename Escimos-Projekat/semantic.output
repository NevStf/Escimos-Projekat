Terminals unused in grammar

   _COLON


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _FUN _TYPE _ID $@1 _LPAREN parameters _RPAREN body

    6 parameters: %empty
    7           | _TYPE _ID
    8           | _TYPE _ID _COMMA _TYPE _ID

    9 body: _LBRACKET variable_list statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: vars _SEMICOLON

   13 vars: _TYPE _ID
   14     | vars _COMMA _ID

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement
   21          | para_statement
   22          | increment
   23          | break_statement
   24          | switch

   25 compound_statement: _LBRACKET statement_list _RBRACKET

   26 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   27 num_exp: exp
   28        | num_exp _AROP exp

   29 exp: literal
   30    | _ID
   31    | function_call
   32    | _LPAREN num_exp _RPAREN
   33    | _ID _INC

   34 $@2: %empty

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN statement

   36 $@3: %empty

   37 switch: _SWITCH _LPAREN _ID _RPAREN $@3 _LBRACKET switch_body _RBRACKET

   38 case_statement: _CASE literal _POINTER statement
   39               | _CASE literal _POINTER statement break_statement

   40 otherwise_statement: _OTHERWISE _POINTER statement
   41                    | _OTHERWISE _POINTER statement break_statement

   42 case_statement_list: case_statement
   43                    | case_statement_list case_statement

   44 switch_body: case_statement_list
   45            | case_statement_list otherwise_statement

   46 break_statement: _BREAK _SEMICOLON

   47 increment: _ID _INC _SEMICOLON

   48 literal: _INT_NUMBER
   49        | _UINT_NUMBER

   50 $@4: %empty

   51 function_call: _ID $@4 _LPAREN argument _RPAREN

   52 argument: %empty
   53         | num_exp
   54         | num_exp _COMMA num_exp

   55 if_statement: if_part
   56             | if_part _ELSE statement

   57 if_part: _IF _LPAREN rel_exp _RPAREN statement

   58 rel_exp: num_exp _RELOP num_exp

   59 return_statement: _RETURN num_exp _SEMICOLON
   60                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5 7 8 13 35
_IF (259) 57
_ELSE (260) 56
_RETURN (261) 59 60
_ID (262) 5 7 8 13 14 26 30 33 35 37 47 51
_INT_NUMBER (263) 48
_UINT_NUMBER (264) 49
_LPAREN (265) 5 32 35 37 51 57
_RPAREN (266) 5 32 35 37 51 57
_LBRACKET (267) 9 25 37
_RBRACKET (268) 9 25 37
_ASSIGN (269) 26 35
_SEMICOLON (270) 12 26 35 46 47 59 60
_COMMA (271) 8 14 54
_AROP (272) 28
_RELOP (273) 58
_INC (274) 33 47
_FUN (275) 5
_PARA (276) 35
_COLON (277)
_POINTER (278) 38 39 40 41
_SWITCH (279) 37
_BREAK (280) 46
_OTHERWISE (281) 40 41
_CASE (282) 38 39
ONLY_IF (283)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
program (30)
    on left: 1, on right: 0
function_list (31)
    on left: 2 3, on right: 1 3
function (32)
    on left: 5, on right: 2 3
$@1 (33)
    on left: 4, on right: 5
parameters (34)
    on left: 6 7 8, on right: 5
body (35)
    on left: 9, on right: 5
variable_list (36)
    on left: 10 11, on right: 9 11
variable (37)
    on left: 12, on right: 11
vars (38)
    on left: 13 14, on right: 12 14
statement_list (39)
    on left: 15 16, on right: 9 16 25
statement (40)
    on left: 17 18 19 20 21 22 23 24, on right: 16 35 38 39 40 41 56
    57
compound_statement (41)
    on left: 25, on right: 17
assignment_statement (42)
    on left: 26, on right: 18
num_exp (43)
    on left: 27 28, on right: 26 28 32 53 54 58 59
exp (44)
    on left: 29 30 31 32 33, on right: 27 28
para_statement (45)
    on left: 35, on right: 21
$@2 (46)
    on left: 34, on right: 35
switch (47)
    on left: 37, on right: 24
$@3 (48)
    on left: 36, on right: 37
case_statement (49)
    on left: 38 39, on right: 42 43
otherwise_statement (50)
    on left: 40 41, on right: 45
case_statement_list (51)
    on left: 42 43, on right: 43 44 45
switch_body (52)
    on left: 44 45, on right: 37
break_statement (53)
    on left: 46, on right: 23 39 41
increment (54)
    on left: 47, on right: 22
literal (55)
    on left: 48 49, on right: 29 35 38 39
function_call (56)
    on left: 51, on right: 31
$@4 (57)
    on left: 50, on right: 51
argument (58)
    on left: 52 53 54, on right: 51
if_statement (59)
    on left: 55 56, on right: 19
if_part (60)
    on left: 57, on right: 55 56
rel_exp (61)
    on left: 58, on right: 35 57
return_statement (62)
    on left: 59 60, on right: 20


State 0

    0 $accept: . program $end

    _FUN  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _FUN . _TYPE _ID $@1 _LPAREN parameters _RPAREN body

    _TYPE  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _FUN  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _FUN _TYPE . _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _FUN _TYPE _ID . $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    5 function: _FUN _TYPE _ID $@1 . _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 10


State 10

    5 function: _FUN _TYPE _ID $@1 _LPAREN . parameters _RPAREN body

    _TYPE  shift, and go to state 11

    $default  reduce using rule 6 (parameters)

    parameters  go to state 12


State 11

    7 parameters: _TYPE . _ID
    8           | _TYPE . _ID _COMMA _TYPE _ID

    _ID  shift, and go to state 13


State 12

    5 function: _FUN _TYPE _ID $@1 _LPAREN parameters . _RPAREN body

    _RPAREN  shift, and go to state 14


State 13

    7 parameters: _TYPE _ID .
    8           | _TYPE _ID . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 15

    $default  reduce using rule 7 (parameters)


State 14

    5 function: _FUN _TYPE _ID $@1 _LPAREN parameters _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    8 parameters: _TYPE _ID _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 18


State 16

    9 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 19


State 17

    5 function: _FUN _TYPE _ID $@1 _LPAREN parameters _RPAREN body .

    $default  reduce using rule 5 (function)


State 18

    8 parameters: _TYPE _ID _COMMA _TYPE . _ID

    _ID  shift, and go to state 20


State 19

    9 body: _LBRACKET variable_list . statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 21

    $default  reduce using rule 15 (statement_list)

    variable        go to state 22
    vars            go to state 23
    statement_list  go to state 24


State 20

    8 parameters: _TYPE _ID _COMMA _TYPE _ID .

    $default  reduce using rule 8 (parameters)


State 21

   13 vars: _TYPE . _ID

    _ID  shift, and go to state 25


State 22

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 23

   12 variable: vars . _SEMICOLON
   14 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 26
    _COMMA      shift, and go to state 27


State 24

    9 body: _LBRACKET variable_list statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32
    _PARA      shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _BREAK     shift, and go to state 35

    statement             go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    para_statement        go to state 39
    switch                go to state 40
    break_statement       go to state 41
    increment             go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45


State 25

   13 vars: _TYPE _ID .

    $default  reduce using rule 13 (vars)


State 26

   12 variable: vars _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 27

   14 vars: vars _COMMA . _ID

    _ID  shift, and go to state 46


State 28

   57 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 47


State 29

   59 return_statement: _RETURN . num_exp _SEMICOLON
   60                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51
    _SEMICOLON    shift, and go to state 52

    num_exp        go to state 53
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 30

   26 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   47 increment: _ID . _INC _SEMICOLON

    _ASSIGN  shift, and go to state 57
    _INC     shift, and go to state 58


State 31

   25 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 59


State 32

    9 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 33

   35 para_statement: _PARA . _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN statement

    _LPAREN  shift, and go to state 60


State 34

   37 switch: _SWITCH . _LPAREN _ID _RPAREN $@3 _LBRACKET switch_body _RBRACKET

    _LPAREN  shift, and go to state 61


State 35

   46 break_statement: _BREAK . _SEMICOLON

    _SEMICOLON  shift, and go to state 62


State 36

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 37

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 38

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 39

   21 statement: para_statement .

    $default  reduce using rule 21 (statement)


State 40

   24 statement: switch .

    $default  reduce using rule 24 (statement)


State 41

   23 statement: break_statement .

    $default  reduce using rule 23 (statement)


State 42

   22 statement: increment .

    $default  reduce using rule 22 (statement)


State 43

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 44

   55 if_statement: if_part .
   56             | if_part . _ELSE statement

    _ELSE  shift, and go to state 63

    $default  reduce using rule 55 (if_statement)


State 45

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 46

   14 vars: vars _COMMA _ID .

    $default  reduce using rule 14 (vars)


State 47

   57 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51

    num_exp        go to state 64
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56
    rel_exp        go to state 65


State 48

   30 exp: _ID .
   33    | _ID . _INC
   51 function_call: _ID . $@4 _LPAREN argument _RPAREN

    _INC  shift, and go to state 66

    _LPAREN   reduce using rule 50 ($@4)
    $default  reduce using rule 30 (exp)

    $@4  go to state 67


State 49

   48 literal: _INT_NUMBER .

    $default  reduce using rule 48 (literal)


State 50

   49 literal: _UINT_NUMBER .

    $default  reduce using rule 49 (literal)


State 51

   32 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51

    num_exp        go to state 68
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 52

   60 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 60 (return_statement)


State 53

   28 num_exp: num_exp . _AROP exp
   59 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 69
    _AROP       shift, and go to state 70


State 54

   27 num_exp: exp .

    $default  reduce using rule 27 (num_exp)


State 55

   29 exp: literal .

    $default  reduce using rule 29 (exp)


State 56

   31 exp: function_call .

    $default  reduce using rule 31 (exp)


State 57

   26 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51

    num_exp        go to state 71
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 58

   47 increment: _ID _INC . _SEMICOLON

    _SEMICOLON  shift, and go to state 72


State 59

   16 statement_list: statement_list . statement
   25 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 73
    _PARA      shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _BREAK     shift, and go to state 35

    statement             go to state 36
    compound_statement    go to state 37
    assignment_statement  go to state 38
    para_statement        go to state 39
    switch                go to state 40
    break_statement       go to state 41
    increment             go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45


State 60

   35 para_statement: _PARA _LPAREN . _TYPE _ID _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN statement

    _TYPE  shift, and go to state 74


State 61

   37 switch: _SWITCH _LPAREN . _ID _RPAREN $@3 _LBRACKET switch_body _RBRACKET

    _ID  shift, and go to state 75


State 62

   46 break_statement: _BREAK _SEMICOLON .

    $default  reduce using rule 46 (break_statement)


State 63

   56 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _PARA      shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _BREAK     shift, and go to state 35

    statement             go to state 76
    compound_statement    go to state 37
    assignment_statement  go to state 38
    para_statement        go to state 39
    switch                go to state 40
    break_statement       go to state 41
    increment             go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45


State 64

   28 num_exp: num_exp . _AROP exp
   58 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 70
    _RELOP  shift, and go to state 77


State 65

   57 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 78


State 66

   33 exp: _ID _INC .

    $default  reduce using rule 33 (exp)


State 67

   51 function_call: _ID $@4 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 79


State 68

   28 num_exp: num_exp . _AROP exp
   32 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 80
    _AROP    shift, and go to state 70


State 69

   59 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 59 (return_statement)


State 70

   28 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51

    exp            go to state 81
    literal        go to state 55
    function_call  go to state 56


State 71

   26 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   28 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 82
    _AROP       shift, and go to state 70


State 72

   47 increment: _ID _INC _SEMICOLON .

    $default  reduce using rule 47 (increment)


State 73

   25 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 25 (compound_statement)


State 74

   35 para_statement: _PARA _LPAREN _TYPE . _ID _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN statement

    _ID  shift, and go to state 83


State 75

   37 switch: _SWITCH _LPAREN _ID . _RPAREN $@3 _LBRACKET switch_body _RBRACKET

    _RPAREN  shift, and go to state 84


State 76

   56 if_statement: if_part _ELSE statement .

    $default  reduce using rule 56 (if_statement)


State 77

   58 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51

    num_exp        go to state 85
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 78

   57 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _PARA      shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _BREAK     shift, and go to state 35

    statement             go to state 86
    compound_statement    go to state 37
    assignment_statement  go to state 38
    para_statement        go to state 39
    switch                go to state 40
    break_statement       go to state 41
    increment             go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45


State 79

   51 function_call: _ID $@4 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51

    $default  reduce using rule 52 (argument)

    num_exp        go to state 87
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56
    argument       go to state 88


State 80

   32 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 32 (exp)


State 81

   28 num_exp: num_exp _AROP exp .

    $default  reduce using rule 28 (num_exp)


State 82

   26 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 26 (assignment_statement)


State 83

   35 para_statement: _PARA _LPAREN _TYPE _ID . _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN statement

    _ASSIGN  shift, and go to state 89


State 84

   37 switch: _SWITCH _LPAREN _ID _RPAREN . $@3 _LBRACKET switch_body _RBRACKET

    $default  reduce using rule 36 ($@3)

    $@3  go to state 90


State 85

   28 num_exp: num_exp . _AROP exp
   58 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 70

    $default  reduce using rule 58 (rel_exp)


State 86

   57 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 57 (if_part)


State 87

   28 num_exp: num_exp . _AROP exp
   53 argument: num_exp .
   54         | num_exp . _COMMA num_exp

    _COMMA  shift, and go to state 91
    _AROP   shift, and go to state 70

    $default  reduce using rule 53 (argument)


State 88

   51 function_call: _ID $@4 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 92


State 89

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN . literal _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50

    literal  go to state 93


State 90

   37 switch: _SWITCH _LPAREN _ID _RPAREN $@3 . _LBRACKET switch_body _RBRACKET

    _LBRACKET  shift, and go to state 94


State 91

   54 argument: num_exp _COMMA . num_exp

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51

    num_exp        go to state 95
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 92

   51 function_call: _ID $@4 _LPAREN argument _RPAREN .

    $default  reduce using rule 51 (function_call)


State 93

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal . _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN statement

    _SEMICOLON  shift, and go to state 96


State 94

   37 switch: _SWITCH _LPAREN _ID _RPAREN $@3 _LBRACKET . switch_body _RBRACKET

    _CASE  shift, and go to state 97

    case_statement       go to state 98
    case_statement_list  go to state 99
    switch_body          go to state 100


State 95

   28 num_exp: num_exp . _AROP exp
   54 argument: num_exp _COMMA num_exp .

    _AROP  shift, and go to state 70

    $default  reduce using rule 54 (argument)


State 96

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON . $@2 rel_exp _SEMICOLON literal _RPAREN statement

    $default  reduce using rule 34 ($@2)

    $@2  go to state 101


State 97

   38 case_statement: _CASE . literal _POINTER statement
   39               | _CASE . literal _POINTER statement break_statement

    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50

    literal  go to state 102


State 98

   42 case_statement_list: case_statement .

    $default  reduce using rule 42 (case_statement_list)


State 99

   43 case_statement_list: case_statement_list . case_statement
   44 switch_body: case_statement_list .
   45            | case_statement_list . otherwise_statement

    _OTHERWISE  shift, and go to state 103
    _CASE       shift, and go to state 97

    $default  reduce using rule 44 (switch_body)

    case_statement       go to state 104
    otherwise_statement  go to state 105


State 100

   37 switch: _SWITCH _LPAREN _ID _RPAREN $@3 _LBRACKET switch_body . _RBRACKET

    _RBRACKET  shift, and go to state 106


State 101

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON $@2 . rel_exp _SEMICOLON literal _RPAREN statement

    _ID           shift, and go to state 48
    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50
    _LPAREN       shift, and go to state 51

    num_exp        go to state 64
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56
    rel_exp        go to state 107


State 102

   38 case_statement: _CASE literal . _POINTER statement
   39               | _CASE literal . _POINTER statement break_statement

    _POINTER  shift, and go to state 108


State 103

   40 otherwise_statement: _OTHERWISE . _POINTER statement
   41                    | _OTHERWISE . _POINTER statement break_statement

    _POINTER  shift, and go to state 109


State 104

   43 case_statement_list: case_statement_list case_statement .

    $default  reduce using rule 43 (case_statement_list)


State 105

   45 switch_body: case_statement_list otherwise_statement .

    $default  reduce using rule 45 (switch_body)


State 106

   37 switch: _SWITCH _LPAREN _ID _RPAREN $@3 _LBRACKET switch_body _RBRACKET .

    $default  reduce using rule 37 (switch)


State 107

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON $@2 rel_exp . _SEMICOLON literal _RPAREN statement

    _SEMICOLON  shift, and go to state 110


State 108

   38 case_statement: _CASE literal _POINTER . statement
   39               | _CASE literal _POINTER . statement break_statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _PARA      shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _BREAK     shift, and go to state 35

    statement             go to state 111
    compound_statement    go to state 37
    assignment_statement  go to state 38
    para_statement        go to state 39
    switch                go to state 40
    break_statement       go to state 41
    increment             go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45


State 109

   40 otherwise_statement: _OTHERWISE _POINTER . statement
   41                    | _OTHERWISE _POINTER . statement break_statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _PARA      shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _BREAK     shift, and go to state 35

    statement             go to state 112
    compound_statement    go to state 37
    assignment_statement  go to state 38
    para_statement        go to state 39
    switch                go to state 40
    break_statement       go to state 41
    increment             go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45


State 110

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON . literal _RPAREN statement

    _INT_NUMBER   shift, and go to state 49
    _UINT_NUMBER  shift, and go to state 50

    literal  go to state 113


State 111

   38 case_statement: _CASE literal _POINTER statement .
   39               | _CASE literal _POINTER statement . break_statement

    _BREAK  shift, and go to state 35

    $default  reduce using rule 38 (case_statement)

    break_statement  go to state 114


State 112

   40 otherwise_statement: _OTHERWISE _POINTER statement .
   41                    | _OTHERWISE _POINTER statement . break_statement

    _BREAK  shift, and go to state 35

    $default  reduce using rule 40 (otherwise_statement)

    break_statement  go to state 115


State 113

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON literal . _RPAREN statement

    _RPAREN  shift, and go to state 116


State 114

   39 case_statement: _CASE literal _POINTER statement break_statement .

    $default  reduce using rule 39 (case_statement)


State 115

   41 otherwise_statement: _OTHERWISE _POINTER statement break_statement .

    $default  reduce using rule 41 (otherwise_statement)


State 116

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _PARA      shift, and go to state 33
    _SWITCH    shift, and go to state 34
    _BREAK     shift, and go to state 35

    statement             go to state 117
    compound_statement    go to state 37
    assignment_statement  go to state 38
    para_statement        go to state 39
    switch                go to state 40
    break_statement       go to state 41
    increment             go to state 42
    if_statement          go to state 43
    if_part               go to state 44
    return_statement      go to state 45


State 117

   35 para_statement: _PARA _LPAREN _TYPE _ID _ASSIGN literal _SEMICOLON $@2 rel_exp _SEMICOLON literal _RPAREN statement .

    $default  reduce using rule 35 (para_statement)
